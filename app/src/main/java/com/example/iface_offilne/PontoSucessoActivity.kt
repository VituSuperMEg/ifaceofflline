package com.example.iface_offilne

import android.content.Intent
import android.os.Bundle
import android.os.Handler
import android.os.Looper
import android.util.Log
import android.widget.Button
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import java.text.SimpleDateFormat
import java.util.*

/**
 * Activity para mostrar confirma√ß√£o de ponto registrado com sucesso
 */
class PontoSucessoActivity : AppCompatActivity() {

    companion object {
        private const val TAG = "PontoSucessoActivity"
        
        // Constantes para extras
        const val EXTRA_FUNCIONARIO_NOME = "funcionario_nome"
        const val EXTRA_DATA_HORA = "data_hora"
        const val EXTRA_LATITUDE = "latitude"
        const val EXTRA_LONGITUDE = "longitude"
    }

    private lateinit var tvFuncionarioNome: TextView
    private lateinit var tvDataPonto: TextView
    private lateinit var tvHoraPonto: TextView
    private lateinit var tvCoordenadas: TextView
    private lateinit var btnFechar: Button

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_ponto_sucesso)
        
        Log.d(TAG, "üéâ Iniciando PontoSucessoActivity")
        
        try {
            setupViews()
            loadData()
            setupAutoReturn()
            
        } catch (e: Exception) {
            Log.e(TAG, "‚ùå Erro na inicializa√ß√£o: ${e.message}")
            e.printStackTrace()
            finish()
        }
    }

    private fun setupViews() {
        try {
            tvFuncionarioNome = findViewById(R.id.tvFuncionarioNome)
            tvDataPonto = findViewById(R.id.tvDataPonto)
            tvHoraPonto = findViewById(R.id.tvHoraPonto)
            tvCoordenadas = findViewById(R.id.tvCoordenadas)
            btnFechar = findViewById(R.id.btnFechar)
            
            // Configurar bot√£o fechar
            btnFechar.setOnClickListener {
                Log.d(TAG, "üîò Bot√£o fechar clicado")
                returnToPontoActivity()
            }
            
            Log.d(TAG, "‚úÖ Views configuradas")
            
        } catch (e: Exception) {
            Log.e(TAG, "‚ùå Erro ao configurar views: ${e.message}")
            throw e
        }
    }

    private fun loadData() {
        try {
            val intent = intent
            
            // Carregar nome do funcion√°rio
            val funcionarioNome = intent.getStringExtra(EXTRA_FUNCIONARIO_NOME) ?: "FUNCION√ÅRIO"
            tvFuncionarioNome.text = funcionarioNome.uppercase()
            
            // Carregar data e hora
            val dataHora = intent.getLongExtra(EXTRA_DATA_HORA, System.currentTimeMillis())
            val date = Date(dataHora)
            
            val dataFormat = SimpleDateFormat("dd/MM/yyyy", Locale.getDefault())
            val horaFormat = SimpleDateFormat("HH:mm:ss", Locale.getDefault())
            
            tvDataPonto.text = dataFormat.format(date)
            tvHoraPonto.text = horaFormat.format(date)
            
            // Carregar coordenadas
            val latitude = intent.getDoubleExtra(EXTRA_LATITUDE, 0.0)
            val longitude = intent.getDoubleExtra(EXTRA_LONGITUDE, 0.0)
            
            if (latitude != 0.0 && longitude != 0.0) {
                tvCoordenadas.text = "$latitude | $longitude"
            } else {
                tvCoordenadas.text = "Localiza√ß√£o n√£o dispon√≠vel"
            }
            
            Log.d(TAG, "‚úÖ Dados carregados:")
            Log.d(TAG, "   Nome: $funcionarioNome")
            Log.d(TAG, "   Data: ${tvDataPonto.text}")
            Log.d(TAG, "   Hora: ${tvHoraPonto.text}")
            Log.d(TAG, "   Coordenadas: ${tvCoordenadas.text}")
            
        } catch (e: Exception) {
            Log.e(TAG, "‚ùå Erro ao carregar dados: ${e.message}")
            e.printStackTrace()
            
            // Fallback com dados padr√£o
            tvFuncionarioNome.text = "FUNCION√ÅRIO"
            tvDataPonto.text = "Data n√£o dispon√≠vel"
            tvHoraPonto.text = "Hora n√£o dispon√≠vel"
            tvCoordenadas.text = "Localiza√ß√£o n√£o dispon√≠vel"
        }
    }

    private fun setupAutoReturn() {
        try {
            // Retornar automaticamente ap√≥s 3 segundos
            Handler(Looper.getMainLooper()).postDelayed({
                try {
                    if (!isFinishing && !isDestroyed) {
                        Log.d(TAG, "‚è∞ Retorno autom√°tico ap√≥s 3 segundos")
                        returnToPontoActivity()
                    }
                } catch (e: Exception) {
                    Log.e(TAG, "‚ùå Erro no retorno autom√°tico: ${e.message}")
                }
            }, 3000)
            
            Log.d(TAG, "‚úÖ Retorno autom√°tico configurado para 3 segundos")
            
        } catch (e: Exception) {
            Log.e(TAG, "‚ùå Erro ao configurar retorno autom√°tico: ${e.message}")
        }
    }

    private fun returnToPontoActivity() {
        try {
            Log.d(TAG, "üîÑ Retornando para PontoActivity")
            
            // Criar intent para voltar √† tela de ponto
            val intent = Intent(this, PontoActivity::class.java)
            
            // ‚úÖ FOR√áAR REINICIALIZA√á√ÉO COMPLETA DA ACTIVITY
            intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_NEW_TASK
            
            // ‚úÖ ADICIONAR FLAG PARA INDICAR QUE VEM DA TELA DE SUCESSO
            intent.putExtra("FROM_SUCCESS_SCREEN", true)
            
            startActivity(intent)
            finish()
            
        } catch (e: Exception) {
            Log.e(TAG, "‚ùå Erro ao retornar para PontoActivity: ${e.message}")
            e.printStackTrace()
            finish()
        }
    }

    override fun onBackPressed() {
        // Permitir voltar com o bot√£o f√≠sico tamb√©m
        Log.d(TAG, "üîô Bot√£o voltar pressionado")
        returnToPontoActivity()
    }

    override fun onDestroy() {
        super.onDestroy()
        Log.d(TAG, "üßπ PontoSucessoActivity finalizada")
    }
} 